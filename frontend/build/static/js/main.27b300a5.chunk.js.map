{"version":3,"sources":["Person.js","services/persons.js","Notification.js","App.js","index.js"],"names":["PersonFilterForm","filterName","handleFilterNameChange","htmlFor","id","value","onChange","event","PersonForm","newName","newNumber","handleNameChange","handleNumberChange","addPerson","type","onClick","PersonList","persons","deleteHandler","filter","person","name","toLowerCase","includes","map","number","Person","baseUrl","axios","get","newObject","post","put","delete","Notification","notification","message","status","style","display","fontSize","boxSizing","padding","className","App","useState","setPersons","setNewName","setNewNumber","setFilterName","setNotification","useEffect","personService","then","response","data","updateHandler","window","confirm","console","log","showNotification","catch","error","setTimeout","clearNotification","role","target","preventDefault","existing","find","concat","ReactDOM","render","document","getElementById"],"mappings":"kMAEaA,EAAmB,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,WAAYC,EAA6B,EAA7BA,uBAC7C,OACE,iCACE,gDACA,uBAAOC,QAAQ,aAAf,6BACA,uBACEC,GAAG,aACHC,MAAOJ,EACPK,SAAU,SAACC,GAAD,OAAWL,EAAuBK,UAMvCC,EAAa,SAAC,GAMpB,IALLC,EAKI,EALJA,QACAC,EAII,EAJJA,UACAC,EAGI,EAHJA,iBACAC,EAEI,EAFJA,mBACAC,EACI,EADJA,UAEA,OACE,iCACE,kDACA,gCACE,uBAAOV,QAAQ,UAAf,oBACA,uBACEC,GAAG,UACHC,MAAOI,EACPH,SAAU,SAACC,GAAD,OAAWI,EAAiBJ,SAG1C,gCACE,uBAAOJ,QAAQ,YAAf,sBACA,uBACEC,GAAG,YACHC,MAAOK,EACPJ,SAAU,SAACC,GAAD,OAAWK,EAAmBL,SAG5C,8BACE,wBAAQO,KAAK,SAASC,QAASF,EAA/B,uBAQKG,EAAa,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,QAAShB,EAAgC,EAAhCA,WAAYiB,EAAoB,EAApBA,cAChD,OACE,qCACE,yCACA,6BACGD,EACEE,QAAO,SAACC,GAAD,OACNA,EAAOC,KAAKC,cAAcC,SAAStB,EAAWqB,kBAE/CE,KAAI,SAACJ,GAAD,OACH,cAAC,EAAD,CACEC,KAAMD,EAAOC,KACbI,OAAQL,EAAOK,OAEfrB,GAAIgB,EAAOhB,GACXc,cAAeA,GAFVE,EAAOhB,SAKd,QAKCsB,EAAS,SAAC,GAAD,IAAGL,EAAH,EAAGA,KAAMI,EAAT,EAASA,OAAQrB,EAAjB,EAAiBA,GAAIc,EAArB,EAAqBA,cAArB,OACpB,+BACGG,EADH,IACUI,EAAQ,IAChB,wBAAQV,QAAS,kBAAMG,EAAcd,EAAIiB,IAAzC,wB,gBC5EEM,EAAO,eAkBE,EAhBA,WACb,OAAOC,IAAMC,IAAIF,IAeJ,EAZA,SAACG,GACd,OAAOF,IAAMG,KAAKJ,EAASG,IAWd,EARA,SAAC1B,EAAI0B,GAClB,OAAOF,IAAMI,IAAN,UAAaL,EAAb,YAAwBvB,GAAM0B,IAOxB,EAJA,SAAC1B,GACd,OAAOwB,IAAMK,OAAN,UAAgBN,EAAhB,YAA2BvB,KCbvB8B,G,MAAe,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACrBC,EAAoBD,EAApBC,QAASC,EAAWF,EAAXE,OACjB,GAAgB,KAAZD,EACF,OAAO,KAUT,OACE,qBAAKE,MAPO,CACZC,QAAS,QACTC,SAAU,SACVC,UAAW,aACXC,QAAS,UAGUC,UAAWN,EAA9B,SACE,4BAAID,QC2HKQ,EAxIH,WAAO,IAAD,EACcC,mBAAS,IADvB,mBACT5B,EADS,KACA6B,EADA,OAEcD,mBAAS,IAFvB,mBAETpC,EAFS,KAEAsC,EAFA,OAGkBF,mBAAS,IAH3B,mBAGTnC,EAHS,KAGEsC,EAHF,OAIoBH,mBAAS,IAJ7B,mBAIT5C,EAJS,KAIGgD,EAJH,OAKwBJ,mBAAS,CAC/CT,QAAS,GACTC,OAAQ,KAPM,mBAKTF,EALS,KAKKe,EALL,KAWhBC,qBAAU,WACRC,IAAuBC,MAAK,SAACC,GAC3BR,EAAWQ,EAASC,WAErB,IAEH,IAgEMC,EAAgB,SAAC,GAA0B,IAAxBpD,EAAuB,EAAvBA,GAAIiB,EAAmB,EAAnBA,KAAMI,EAAa,EAAbA,OAC7BgC,OAAOC,QAAP,gCAAwCrC,EAAxC,OACF+B,EACUhD,EAAI,CAAEiB,OAAMI,WACnB4B,MAAK,SAACC,GACLK,QAAQC,IAAIN,GAEZR,EACE7B,EAAQO,KAAI,SAACJ,GAAD,OAAaA,EAAOhB,KAAOA,EAAKgB,EAASkC,EAASC,SAEhER,EAAW,IACXC,EAAa,IACba,EAAiB,UAAD,UAAexC,EAAf,6BAEjByC,OAAM,SAACC,GACNJ,QAAQI,MAAMA,GACdF,EAAiB,QAAD,iCAAoCE,QAKtDF,EAAmB,SAACxB,EAAQD,GAChCc,EAAgB,CAAEb,SAAQD,YAC1B4B,YAAW,WACTC,MACC,MAECA,EAAoB,WACxBf,EAAgB,CAAEb,OAAQ,GAAID,QAAS,MAGzC,OACE,uBAAM8B,KAAK,OAAX,UACE,2CACA,cAAC,EAAD,CAAc/B,aAAcA,IAC5B,cAAC,EAAD,CACElC,WAAYA,EACZC,uBA9DyB,SAACK,GAC9B0C,EAAc1C,EAAM4D,OAAO9D,UA+DzB,cAAC,EAAD,CACEI,QAASA,EACTC,UAAWA,EACXC,iBA3EmB,SAACJ,GACxBwC,EAAWxC,EAAM4D,OAAO9D,QA2EpBO,mBAxEqB,SAACL,GAC1ByC,EAAazC,EAAM4D,OAAO9D,QAwEtBQ,UA5GY,SAACN,GACjBA,EAAM6D,iBAGN,IAAMC,EAAWpD,EAAQqD,MAAK,SAAClD,GAAD,OAAYA,EAAOC,OAASZ,KACtD4D,EACFb,EAAc,CAAEpD,GAAIiE,EAASjE,GAAIiB,KAAMZ,EAASgB,OAAQf,IAW1D0C,EANe,CACb/B,KAAMZ,EACNgB,OAAQf,IAMP2C,MAAK,SAACC,GACLR,EAAW7B,EAAQsD,OAAOjB,EAASC,OACnCR,EAAW,IACXC,EAAa,IACba,EAAiB,UAAD,UAAepD,EAAf,2BAEjBqD,OAAM,SAACC,GACNJ,QAAQI,MAAMA,GACdF,EAAiB,QAAD,+BAAkCE,UAmFpD,cAAC,EAAD,CACE9C,QAASA,EACThB,WAAYA,EACZiB,cAtEgB,SAACd,EAAIiB,GACrBoC,OAAOC,QAAP,0CAAkDrC,EAAlD,OACF+B,EACUhD,GACPiD,MAAK,SAACC,GAELR,EAAW7B,EAAQE,QAAO,SAACC,GAAD,OAAYA,EAAOhB,KAAOA,MACpDyD,EAAiB,UAAD,UAAexC,EAAf,6BAEjByC,OAAM,SAACC,GACNJ,QAAQI,MAAMA,GAGdF,EACE,QADc,yBAEIxC,EAFJ,+C,MC1E1BmD,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.27b300a5.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const PersonFilterForm = ({ filterName, handleFilterNameChange }) => {\n  return (\n    <form>\n      <h2>Filter results</h2>\n      <label htmlFor=\"filterName\">Name contains: </label>\n      <input\n        id=\"filterName\"\n        value={filterName}\n        onChange={(event) => handleFilterNameChange(event)}\n      />\n    </form>\n  );\n};\n\nexport const PersonForm = ({\n  newName,\n  newNumber,\n  handleNameChange,\n  handleNumberChange,\n  addPerson,\n}) => {\n  return (\n    <form>\n      <h2>Add a new person</h2>\n      <div>\n        <label htmlFor=\"newName\">Name: </label>\n        <input\n          id=\"newName\"\n          value={newName}\n          onChange={(event) => handleNameChange(event)}\n        />\n      </div>\n      <div>\n        <label htmlFor=\"newNumber\">Number: </label>\n        <input\n          id=\"newNumber\"\n          value={newNumber}\n          onChange={(event) => handleNumberChange(event)}\n        />\n      </div>\n      <div>\n        <button type=\"submit\" onClick={addPerson}>\n          add\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport const PersonList = ({ persons, filterName, deleteHandler }) => {\n  return (\n    <>\n      <h2>Numbers</h2>\n      <ul>\n        {persons\n          .filter((person) =>\n            person.name.toLowerCase().includes(filterName.toLowerCase())\n          )\n          .map((person) => (\n            <Person\n              name={person.name}\n              number={person.number}\n              key={person.id}\n              id={person.id}\n              deleteHandler={deleteHandler}\n            />\n          ))}\n      </ul>{\" \"}\n    </>\n  );\n};\n\nexport const Person = ({ name, number, id, deleteHandler }) => (\n  <li>\n    {name} {number}{\" \"}\n    <button onClick={() => deleteHandler(id, name)}>delete</button>\n  </li>\n);\n","import axios from \"axios\";\nconst baseUrl = `/api/persons`;\n\nconst getAll = () => {\n  return axios.get(baseUrl);\n};\n\nconst create = (newObject) => {\n  return axios.post(baseUrl, newObject);\n};\n\nconst update = (id, newObject) => {\n  return axios.put(`${baseUrl}/${id}`, newObject);\n};\n\nconst remove = (id) => {\n  return axios.delete(`${baseUrl}/${id}`);\n};\n\nexport default {\n  getAll,\n  create,\n  update,\n  remove,\n};\n","import React from \"react\";\nimport \"./notification.css\";\n\nexport const Notification = ({ notification }) => {\n  const { message, status } = notification;\n  if (message === \"\") {\n    return null;\n  }\n\n  // Demonstrating both inline styles and className styles\n  const style = {\n    display: \"block\",\n    fontSize: \"1.5rem\",\n    boxSizing: \"border-box\",\n    padding: \"0 1rem\",\n  };\n  return (\n    <div style={style} className={status}>\n      <p>{message}</p>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { PersonForm, PersonFilterForm, PersonList } from \"./Person\";\nimport personService from \"./services/persons\";\nimport { Notification } from \"./Notification\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filterName, setFilterName] = useState(\"\");\n  const [notification, setNotification] = useState({\n    message: \"\",\n    status: \"\",\n  });\n\n  // fetch data from the server\n  useEffect(() => {\n    personService.getAll().then((response) => {\n      setPersons(response.data);\n    });\n  }, []);\n\n  const addPerson = (event) => {\n    event.preventDefault();\n\n    // If person exists, offer to update it\n    const existing = persons.find((person) => person.name === newName);\n    if (existing) {\n      updateHandler({ id: existing.id, name: newName, number: newNumber });\n      return;\n    }\n\n    // Create the object\n    const person = {\n      name: newName,\n      number: newNumber,\n    };\n\n    // Persist to database\n    personService\n      .create(person)\n      .then((response) => {\n        setPersons(persons.concat(response.data));\n        setNewName(\"\");\n        setNewNumber(\"\");\n        showNotification(\"success\", `${newName} added successfully`);\n      })\n      .catch((error) => {\n        console.error(error);\n        showNotification(\"error\", `Error adding person: ${error}`);\n      });\n  };\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleFilterNameChange = (event) => {\n    setFilterName(event.target.value);\n  };\n\n  const deleteHandler = (id, name) => {\n    if (window.confirm(`Are you sure you want to delete ${name}?`)) {\n      personService\n        .remove(id)\n        .then((response) => {\n          // Delete from local view too\n          setPersons(persons.filter((person) => person.id !== id));\n          showNotification(\"success\", `${name} deleted successfully`);\n        })\n        .catch((error) => {\n          console.error(error);\n          // Naive assumption: deleted already. We could do statuscode checking etc\n          // but leaving that out of scope for now.\n          showNotification(\n            \"error\",\n            `Information of ${name} already deleted from the server`\n          );\n        });\n    }\n  };\n\n  const updateHandler = ({ id, name, number }) => {\n    if (window.confirm(`Do you want to update ${name}?`)) {\n      personService\n        .update(id, { name, number })\n        .then((response) => {\n          console.log(response);\n          // Update local view too\n          setPersons(\n            persons.map((person) => (person.id !== id ? person : response.data))\n          );\n          setNewName(\"\");\n          setNewNumber(\"\");\n          showNotification(\"success\", `${name} updated successfully`);\n        })\n        .catch((error) => {\n          console.error(error);\n          showNotification(\"error\", `Error updating person: ${error}`);\n        });\n    }\n  };\n\n  const showNotification = (status, message) => {\n    setNotification({ status, message });\n    setTimeout(() => {\n      clearNotification();\n    }, 3000);\n  };\n  const clearNotification = () => {\n    setNotification({ status: \"\", message: \"\" });\n  };\n\n  return (\n    <main role=\"main\">\n      <h1>Phonebook</h1>\n      <Notification notification={notification} />\n      <PersonFilterForm\n        filterName={filterName}\n        handleFilterNameChange={handleFilterNameChange}\n      />\n      <PersonForm\n        newName={newName}\n        newNumber={newNumber}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        addPerson={addPerson}\n      />\n      <PersonList\n        persons={persons}\n        filterName={filterName}\n        deleteHandler={deleteHandler}\n      />\n    </main>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}